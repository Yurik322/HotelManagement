@model HotelManagement.Areas.Dashboard.ViewModels.AccommodationPackageActionModel

@if (Model != null)
{
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">
                @if (Model.ID > 0)
                {
                    <span>
                        Edit Accommodation Package
                    </span>
                }
                else
                {
                    <span>
                        Create Accommodation Package
                    </span>
                }
            </h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <form id="actionForm">
                <input type="hidden" name="ID" value="@Model.ID" />
                <div class="form-group">
                    <label>Accommodation Type</label>

                    <select class="form-control" name="AccommodationTypeID">
                        @if (Model.AccommodationTypes != null)
                        {
                            foreach (var accommodationType in Model.AccommodationTypes)
                            {
                                <option value="@accommodationType.ID" @(accommodationType.ID == Model.AccommodationTypeID ? "selected" : string.Empty)>
                                    @accommodationType.Name
                                </option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label>Name</label>
                    <input class="form-control" name="Name" placeholder="Enter Name" value="@Model.Name">
                </div>
                <div class="form-group">
                    <label>NoOfRoom</label>
                    <input class="form-control" name="NoOfRoom" placeholder="Enter number of room" value="@Model.NoOfRoom">
                </div>
                <div class="form-group">
                    <label>FeePerNight</label>
                    <input class="form-control" name="FeePerNight" placeholder="Enter fee per night" value="@Model.FeePerNight">
                </div>
                <div class="form-group">
                    <label>Pictures</label>
                    <input id="selectPictures" class="form-control" name="Pictures" type="file" multiple>
                    <input type="hidden" name="pictureIDs" id="pictureIDs" value="" />
                </div>
                <div id="picturesArea">
                    @if (Model.AccommodationPackagePictures != null && Model.AccommodationPackagePictures.Count() > 0)
                    {
                        foreach (var accommodationPicture in Model.AccommodationPackagePictures)
                        {
                            <img src="/images/site/@accommodationPicture.Picture.Url" class="img-fluid" style="width: 200px" onclick="removeMe(this)" data-id="@accommodationPicture.PictureID" />
                        }
                    }
                </div>
            </form>

            <div class="errorDiv">

            </div>
        </div>
        <div class="modal-footer">
            <button id="actionButton" type="button" class="btn btn-primary"><i class="fas fa-save mr-1"></i> Save</button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal"><i class="fas fa-times mr-1"></i> Close</button>
        </div>
    </div>
}

<div id="imageTemplate">
    <img src="" class="img-fluid" style="width: 200px" onclick="removeMe(this)" />
</div>

<script>
    $("#actionButton").click(function () {

        var pictureIDs = [];
        $("#picturesArea img").each(function() {
            var picID = $(this).attr("data-id");

            pictureIDs.push(picID);
        });
        $("#pictureIDs").val(pictureIDs.join());

        $.ajax({
            url: '@Url.Action("Action", "AccommodationPackages")',
            type: "post",
            data: $("#actionForm").serialize()
        }).done(function (response) {
            debugger;
            if (response.Success) {

                location.reload();

            } else {
                $(".errorDiv").html(response.Message);
            }
        });
    });

    $("#selectPictures").change(function() {

        var pictures = this.files;
        var formData = new FormData();

        for (var i = 0; i < pictures.length; i++) {
            formData.append("Picture", pictures[i]);
        }

        $.ajax({
            url: '@Url.Action("UploadPictures", "Dashboard")',
            type: "post",
            data: formData,
            processData: false,
            contentType: false
        }).done(function (response) {

            for (var i = 0; i < response.length; i++) {
                var picture = response[i];

                var $imgHtml = $("#imageTemplate").clone();

                $imgHtml.find("img").attr("src", "/images/site/" + picture.Url);
                $imgHtml.find("img").attr("data-id", picture.ID);

                $("#picturesArea").append($imgHtml.html());
            }
        });
    });

    function removeMe(element) {
        element.remove();
    }
</script>